import logging
import asyncio
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ConversationHandler,
    ContextTypes,
)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
(
    START,
    QUESTION1,
    QUESTION2,
    QUESTION3,
    WAIT_CHECKLIST_PROMPT,
) = range(5)


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    photo_url = "https://postimg.cc/0bv6fLWx"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    caption = (
        "–ü—Ä–∏–≤–µ—Ç üëã, —ç—Ç–æ –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ @Rafael_Russia –∏ —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –ø–æ–∑–Ω–∞–µ—à—å –º–∏—Ä –∑–∞–∫—É–ø–æ–≤, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º —Å –Ω–∏–º –∏ —É–∑–Ω–∞–µ—à—å –Ω–æ–≤—ã–µ —Ñ–∏—à–∫–∏, –µ—Å–ª–∏ —É–∂–µ –∑–∞–∫—É–ø—â–∏–∫ —Å –æ–ø—ã—Ç–æ–º\n\n"
        "–ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–∫–æ–º —Å–æ –º–Ω–æ–π, —Ç–æ –¥–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è.\n\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –†–∞—Ñ–∞—ç–ª—å, –º–Ω–µ 19 –ª–µ—Ç, –∏ —è —É–∂–µ –±–æ–ª–µ–µ 3 –ª–µ—Ç —Ä–∞–±–æ—Ç–∞—é –∑–∞–∫—É–ø—â–∏–∫–æ–º –∏ —è–≤–ª—è—é—Å—å —Å–∞–º—ã–º –º–µ–¥–∏–π–Ω—ã–º –∑–∞–∫—É–ø—â–∏–∫–æ–º –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –æ—Ç–ª–∏–ª —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ–º @RSMediaHolding –±–æ–ª–µ–µ 70 –º–∏–ª–ª–∏–æ–Ω–æ–≤ —Ä—É–±–ª–µ–π, –æ–±—É—á–∏–ª —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –∫–æ–º–∞–Ω–¥–æ–π –∏ –≤—ã–ø—É—Å—Ç–∏–ª –Ω–∞ —Ä—ã–Ω–æ–∫ –±–æ–ª–µ–µ 450+ –∑–∞–∫—É–ø—â–∏–∫–æ–≤, –æ—Ç–∑—ã–≤—ã —Ç—É—Ç @Rafaei_Russia\n\n"
        "–ù—É, –∞ —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø–µ—Ä–µ–π–¥–µ–º –∫ –Ω–∞—à–µ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª—É, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç, –¥–∞–±—ã —è –ø–æ–Ω–∏–º–∞–ª, –∫–∞–∫–æ–π —É —Ç–µ–±—è —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –≤–Ω–∏–∑ üëáüèª"
    )
    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", callback_data="start_test")]]
    )
    await update.message.reply_photo(photo=photo_url, caption=caption, reply_markup=keyboard)
    return START


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç"
async def start_test_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception:
        pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
    question_text = "–ß—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫—É–ø—â–∏–∫–æ–º?"
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–ò–∑—É—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–∞–Ω–∞–ª–æ–≤", callback_data="q1_a1")],
        [InlineKeyboardButton("–û—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="q1_a2")],
        [InlineKeyboardButton("–ò—Å–∫–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤", callback_data="q1_a3")],
    ])
    await query.message.reply_text(question_text, reply_markup=keyboard)
    return QUESTION1


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
async def handle_question1(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception:
        pass

    selected = query.data  # –û–∂–∏–¥–∞–µ—Ç—Å—è: "q1_a1", "q1_a2" –∏–ª–∏ "q1_a3"
    if selected == "q1_a1":
        response_text = "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ò–∑—É—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–∞–Ω–∞–ª–æ–≤ ‚Äî —ç—Ç–æ –±–∞–∑–∞, –±–µ–∑ –Ω–µ–µ –Ω–∏–∫—É–¥–∞."
    else:
        response_text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ."
    await query.message.reply_text(response_text)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
    question_text = "–°–∫–æ–ª—å–∫–æ –≤ —Å—Ä–µ–¥–Ω–µ–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–∫—É–ø—â–∏–∫?"
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("20/30–∫", callback_data="q2_a1")],
        [InlineKeyboardButton("50/70–∫", callback_data="q2_a2")],
        [InlineKeyboardButton("150/200–∫", callback_data="q2_a3")],
    ])
    await query.message.reply_text(question_text, reply_markup=keyboard)
    return QUESTION2


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
async def handle_question2(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception:
        pass

    selected = query.data
    if selected == "q2_a3":
        response_text = (
            "–ü—Ä–∞–≤–∏–ª—å–Ω–æ, –∑–∞–∫—É–ø—â–∏–∫, –∏–º–µ—é—â–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —É–∂–µ –º–æ–∂–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª–µ–µ 150 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü ‚Äî —Ç–æ–º—É –ø—Ä–∏–º–µ—Ä –º–æ–∏ —É—á–µ–Ω–∏–∫–∏."
        )
    else:
        response_text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ."
    await query.message.reply_text(response_text)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
    question_text = "–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —É –∑–∞–∫—É–ø—â–∏–∫–∞?"
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã", callback_data="q3_a1")],
        [InlineKeyboardButton("–ø–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤", callback_data="q3_a2")],
        [InlineKeyboardButton("–∞–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–æ–≤", callback_data="q3_a3")],
    ])
    await query.message.reply_text(question_text, reply_markup=keyboard)
    return QUESTION3


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
async def handle_question3(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception:
        pass

    selected = query.data
    if selected == "q3_a2":
        response_text = (
            "–í–µ—Ä–Ω–æ! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º —É –∑–∞–∫—É–ø—â–∏–∫–æ–≤ ‚Äî —ç—Ç–æ –ø–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤, –≤–µ–¥—å —É –º–Ω–æ–≥–∏—Ö –Ω–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è, –≥–¥–µ –∏—Ö –∏—Å–∫–∞—Ç—å. "
            "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–¥—è—Ç –±–µ–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∏ —Å–µ–π—á–∞—Å –º—ã —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏–º —Å –ø–æ–º–æ—â—å—é —á–µ–∫-–ª–∏—Å—Ç–∞."
        )
    else:
        response_text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ."
    await query.message.reply_text(response_text)

    # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await asyncio.sleep(2)
    info_text = (
        "–ü—Ä–µ–∂–¥–µ, —á–µ–º —è –≤—ã—à–ª—é —Ç–µ–±–µ –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ ‚Äî –º–Ω–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–±–µ.\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–º–æ—á—å —á–µ–ª–æ–≤–µ–∫—É —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å –≤ –∑–∞–∫—É–ø–∞—Ö, —è –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å, —Å —á–µ–º –æ–Ω –ø—Ä–∏—à–µ–ª.\n\n"
        "–û—Ç–≤–µ—á–∞—é –ª–∏—á–Ω–æ, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥. –í—Å—ë –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.\n\n"
        "–ü–æ—ç—Ç–æ–º—É: –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ‚¨áÔ∏è\n\n"
        "1. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –°–∫–æ–ª—å–∫–æ –ª–µ—Ç? –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –∂–∏–≤–µ—à—å?\n"
        "2. –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è? –†–∞–±–æ—Ç–∞–µ—à—å/—É—á–∏—à—å—Å—è, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n"
        "3. –°–∫–æ–ª—å–∫–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å —Å–µ–π—á–∞—Å? –°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–µ–ª–∞ –±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?\n"
        "4. –ë—ã–ª –ª–∏ –æ–ø—ã—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å? (–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –∑–∞–∫—É–ø–∞—Ö)\n\n"
        "–û—Ç–≤–µ—Ç—ã –ø—Ä–∏—Å—ã–ª–∞–π –º–Ω–µ –≤ –ª–∏—á–∫—É: @Rafael_Russia"
    )
    await query.message.reply_text(info_text)

    # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —á–µ–∫-–ª–∏—Å—Ç–∞
    await asyncio.sleep(60)
    checklist_text = "–ì–û–¢–û–í–û, –ö–ò–î–ê–Æ –ß–ï–ö-–õ–ò–°–¢?"
    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("–ß–ï–ö-–õ–ò–°–¢", callback_data="send_checklist")]]
    )
    await query.message.reply_text(checklist_text, reply_markup=keyboard)
    return WAIT_CHECKLIST_PROMPT


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ß–ï–ö-–õ–ò–°–¢"
async def send_checklist(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    try:
        await query.edit_message_reply_markup(reply_markup=None)
    except Exception:
        pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —á–µ–∫-–ª–∏—Å—Ç–∞ (—É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)
    checklist_file_path = "–ß–µ–∫–õ–∏—Å—Ç.pdf"
    with open(checklist_file_path, "rb") as file:
        await query.message.reply_document(document=file, filename="checklist.pdf")

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
    asyncio.create_task(schedule_followup(query.message.chat.id, context))
    return ConversationHandler.END


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async def schedule_followup(chat_id: int, context: ContextTypes.DEFAULT_TYPE):
    await asyncio.sleep(60)
    message_text = (
        "–ö–∞–∫ —Ç–µ–±–µ –∏–Ω—Ñ–∞? –ü–æ–ª—É—á–∏–ª –ø–æ–ª—å–∑—É? –ú–Ω–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, –Ω–∞ —Å–∫–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, "
        "–∏–º–µ–Ω–Ω–æ –æ—Ç —Ç–µ–±—è –∂–¥—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤ –ª–∏—á–∫—É ‚Äî @Rafael_Russia\n\n"
        "–û—Ç–ø—Ä–∞–≤—å üî•, –µ—Å–ª–∏ –∏–Ω—Ñ–∞ –±—ã–ª–∞ –ø–æ–ª–µ–∑–Ω–∞\n\n"
        "–ò–ª–∏ üí©, –µ—Å–ª–∏ –≤—Å–µ —É–∂–µ –∑–Ω–∞–ª\n\n"
        "–í—Å–µ–º —Ç–µ–º, –∫—Ç–æ –æ—Ç–ø–∏—Å–∞–ª ‚Äî –¥–∞–º –≤ –ø–æ–¥–∞—Ä–æ–∫ 5 —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä—è–º–æ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–æ –º–Ω–æ–π."
    )
    await context.bot.send_message(chat_id=chat_id, text=message_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω.")
    return ConversationHandler.END


def main() -> None:
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
    )
    TOKEN = "7714280353:AAG5KcGM-jZRJN3cMhQOmQzBgsup9XTS8zY"  # –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
    application = Application.builder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            START: [CallbackQueryHandler(start_test_callback, pattern="^start_test$")],
            QUESTION1: [CallbackQueryHandler(handle_question1, pattern="^q1_")],
            QUESTION2: [CallbackQueryHandler(handle_question2, pattern="^q2_")],
            QUESTION3: [CallbackQueryHandler(handle_question3, pattern="^q3_")],
            WAIT_CHECKLIST_PROMPT: [CallbackQueryHandler(send_checklist, pattern="^send_checklist$")],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    application.run_polling()


if __name__ == "__main__":
    main()
